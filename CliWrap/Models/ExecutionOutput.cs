using CliWrap.Exceptions;

namespace CliWrap.Models
{
    /// <summary>
    /// Output generated by executing a command line interface
    /// </summary>
    public class ExecutionOutput
    {
        /// <summary>
        /// Exit code
        /// </summary>
        public int ExitCode { get; }

        /// <summary>
        /// Standard output
        /// </summary>
        public string StandardOutput { get; }

        /// <summary>
        /// Standard error
        /// </summary>
        public string StandardError { get; }

        /// <summary>
        /// Whether there is an error
        /// </summary>
        public bool HasError => !string.IsNullOrEmpty(StandardError);

        /// <inheritdoc />
        public ExecutionOutput(int exitCode, string standardOutput, string standardError)
        {
            ExitCode = exitCode;
            StandardOutput = standardOutput;
            StandardError = standardError;
        }

        /// <summary>
        /// Throws a <see cref="StandardErrorException"/> if there is an error associated with this <see cref="ExecutionOutput"/>
        /// </summary>
        public void ThrowIfError()
        {
            if (HasError)
                throw new StandardErrorException(StandardError);
        }
    }
}